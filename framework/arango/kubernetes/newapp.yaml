apiVersion: v1
items:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: arangodb
    name: arangodb
  spec:
    replicas: 1
    selector:
      app: arangodb
      deploymentconfig: arangodb
    strategy:
      resources: {}
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: arangodb
          deploymentconfig: arangodb
      spec:
        containers:
        - env:
          - name: ARANGO_ROOT_PASSWORD
            value: voltron
          image: docker-registery.default.svc.cluster.local:5000/default/arangodb:latest
          name: arangodb
          ports:
          - containerPort: 8529
            protocol: TCP
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/arangodb3
            name: pv0001
          - mountPath: /var/lib/arangodb3-apps
            name: pv0002
        volumes:
        - persistentVolumeClaim:
            claimName: arangodb-db-data-pvc
          name: pv0001
        - persistentVolumeClaim:
            claimName: arangodb-db-apps-pvc
          name: pv0002
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - arangodb
        from:
          kind: ImageStreamTag
          name: arangodb:latest
          namespace: default
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: arangodb
    name: arangodb
  spec:
    type: NodePort
    ports:
    - name: 8529-tcp
      port: 8529
      nodePort: 30852
      protocol: TCP
      targetPort: 8529
    selector:
      app: arangodb
      deploymentconfig: arangodb
  status:
    loadBalancer: {}
kind: List
metadata: {}
