---
swagger: "2.0"
info:
  description: "API for defending the universe."
  version: "0.0.2.1"
  title: "Voltron API"
  termsOfService: "http://www.cisco.com/web/siteassets/legal/terms_condition.html"
  contact:
    email: "voltron-team@cisco.com"
basePath: "/api/v1"
tags:
- name: "Pathing"
  description: "Pathing related functionality, largely optimization."
- name: "Topology"
  description: "Topology related functionality."
schemes:
- "http"
paths:
  /pathing/epe/latency:
    get:
      tags:
      - "Pathing"
      summary: "Optimize pathing to EPE based on latency."
      operationId: "pathing_epe_latency_get"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "src_ip"
        in: "query"
        description: "The source IP."
        required: true
        type: "string"
      - name: "src_transport_ip"
        in: "query"
        description: "The upstream or gateway IP that identifies traversal through\
          \ the network beyond the host."
        required: true
        type: "string"
      - name: "dst_ip"
        in: "query"
        description: "The destination IP."
        required: true
        type: "string"
      - name: "max_latency"
        in: "query"
        description: "Specification of a maximum allowable latency, otherwise the\
          \ lowest latency path will be returned."
        required: false
        type: "integer"
      - name: "peer_preference"
        in: "query"
        description: "Specification of peer preference, either direct or transit"
        required: false
        type: "string"
      - name: "composite"
        in: "query"
        description: "Specifies whether or not a client request is a composite request"
        required: false
        type: "string"
      responses:
        200:
          description: "Path identified and selected."
          schema:
            $ref: "#/definitions/SRLabelStack"
        400:
          description: "Invalid source, transport, or destination IP."
      x-swagger-router-controller: "swagger_server.controllers.pathing_controller"
  /pathing/epe/latencyAll:
    get:
      tags:
      - "Pathing"
      summary: "Returns all latencies of EPE"
      operationId: "pathing_epe_latency_all_get"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "src_ip"
        in: "query"
        description: "The source IP."
        required: true
        type: "string"
      - name: "src_transport_ip"
        in: "query"
        description: "The upstream or gateway IP that identifies traversal through\
          \ the network beyond the host."
        required: true
        type: "string"
      responses:
        200:
          description: "Path identified & selected."
          schema:
            $ref: "#/definitions/SRLabelStack"
        400:
          description: "Invalid source or transport."
      x-swagger-router-controller: "swagger_server.controllers.pathing_controller"
  /pathing/epe/bandwidth:
    get:
      tags:
      - "Pathing"
      summary: "Optimize pathing to EPE based on bandwidth."
      operationId: "pathing_epe_bandwidth_get"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "dst_ip"
        in: "query"
        description: "The destination IP."
        required: true
        type: "string"
      - name: "min_bandwidth"
        in: "query"
        description: "Specification of a minimum allowable bandwidth, otherwise the\
          \ greatest bandwidth path will be returned."
        required: false
        type: "integer"
      - name: "peer_preference"
        in: "query"
        description: "Specification of peer preference, either direct or transit"
        required: false
        type: "string"
      - name: "composite"
        in: "query"
        description: "Specifies whether or not a client request is a composite request"
        required: false
        type: "string"
      responses:
        200:
          description: "Path identified and selected."
          schema:
            $ref: "#/definitions/SRLabelStack"
        400:
          description: "Invalid destination IP."
      x-swagger-router-controller: "swagger_server.controllers.pathing_controller"
  /pathing/epe/utilization:
    get:
      tags:
      - "Pathing"
      summary: "Optimize pathing to EPE based on utilization percentages."
      operationId: "pathing_epe_utilization_get"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "dst_ip"
        in: "query"
        description: "The destination IP."
        required: true
        type: "string"
      - name: "max_utilization"
        in: "query"
        description: "Specification of the maximum allowable utilization percentage,\
          \ otherwise the least utilized path will be returned."
        required: false
        type: "integer"
      - name: "peer_preference"
        in: "query"
        description: "Specification of peer preference, either direct or transit"
        required: false
        type: "string"
      - name: "composite"
        in: "query"
        description: "Specifies whether or not a client request is a composite request"
        required: false
        type: "string"
      responses:
        200:
          description: "Path identified and selected."
          schema:
            $ref: "#/definitions/SRLabelStack"
        400:
          description: "Invalid destination IP."
      x-swagger-router-controller: "swagger_server.controllers.pathing_controller"
  /pathing/epe/lossless:
    get:
      tags:
      - "Pathing"
      summary: "Optimize pathing to EPE based on loss-related statistics."
      operationId: "pathing_epe_lossless_get"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "dst_ip"
        in: "query"
        description: "The destination IP."
        required: true
        type: "string"
      - name: "max_loss"
        in: "query"
        description: "Specification of the maximum allowable loss, otherwise the lowest\
          \ loss path will be returned."
        required: false
        type: "integer"
      - name: "peer_preference"
        in: "query"
        description: "Specification of peer preference, either direct or transit"
        required: false
        type: "string"
      - name: "composite"
        in: "query"
        description: "Specifies whether or not a client request is a composite request"
        required: false
        type: "string"
      responses:
        200:
          description: "Path identified and selected."
          schema:
            $ref: "#/definitions/SRLabelStack"
        400:
          description: "Invalid destination IP."
      x-swagger-router-controller: "swagger_server.controllers.pathing_controller"
  /topology:
    get:
      tags:
      - "Topology"
      summary: "Retrieve the topology representation in the database in d3-desired\
        \ form."
      operationId: "topology_get"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Topology representation."
          schema:
            $ref: "#/definitions/d3Topology"
      x-swagger-router-controller: "swagger_server.controllers.topology_controller"
definitions:
  SRLabelStack:
    type: "array"
    description: "Segment Routing Label Stack"
    items:
      type: "integer"
  d3Node:
    type: "object"
    properties:
      id:
        type: "string"
      group:
        type: "integer"
    description: "d3 node representation."
    example:
      id: "id"
      group: 0
  d3Link:
    type: "object"
    properties:
      source:
        type: "string"
      target:
        type: "string"
      value:
        type: "integer"
    description: "d3 link representation."
    example:
      source: "source"
      value: 6
      target: "target"
  d3Topology:
    type: "object"
    properties:
      nodes:
        type: "array"
        items:
          $ref: "#/definitions/d3Node"
      links:
        type: "array"
        items:
          $ref: "#/definitions/d3Link"
    description: "Topology representation corresponding to d3."
    example:
      nodes:
      - id: "id"
        group: 0
      - id: "id"
        group: 0
      links:
      - source: "source"
        value: 6
        target: "target"
      - source: "source"
        value: 6
        target: "target"
parameters:
  src_ip:
    name: "src_ip"
    in: "query"
    description: "The source IP."
    required: true
    type: "string"
  src_transport_ip:
    name: "src_transport_ip"
    in: "query"
    description: "The upstream or gateway IP that identifies traversal through the\
      \ network beyond the host."
    required: true
    type: "string"
  dst_ip:
    name: "dst_ip"
    in: "query"
    description: "The destination IP."
    required: true
    type: "string"
externalDocs:
  description: "Find out more about Voltron"
  url: "https://wwwin-github.cisco.com/spa-ie/voltron"
